// ========== css-переменные ========== //

// Возможно, лучше использовать css-переменные, а не scss. Тогда, к примеру, в будущем можно очень легко на всем сайте поменять цвет, который применяется во множестве мест. Они удобны для переключения между светлой и темной темами сайта. Пример использования css-переменных:

:root {
  --main-color: #334155;
  --color2: #8081bd;
  --color3: #ea5d4a;
  --white-color: #fff;
  --main-font-family: "Montserrat", sans-serif;
  --second-font-family: "gotham-pro-medium", sans-serif;
  // самые частые font-size, font-family, font-weight, line-height вставляем в body без переменных. Но font-family можно занести в переменные.
}

// .block {
// color: var(--main-color);
// }

// ========== scss-переменные ========== //

// $mainColor - поменять на самый частый цвет в макете
// $mainColor: #000;
// $maxWidth - размер max-width для __container. Поменять на тот, что по макету
// $maxWidth: 1280px;

// $maxWidth - размер max-width для __container. Поменять на тот, что по макету
$maxWidthPx: 1460; // Это ширина в пикселях, но пишем без пикселей, чтобы пересчитать в ремы
$minWidthPx: 320;

// Если хотим maxWidth и minWidth в ремах, то пишем следующее:
$maxWidth: calc($maxWidthPx / 16 * 1rem);
$minWidth: calc($minWidthPx / 16 * 1rem);

// maxWidth и minWidth в ремах, но без единиц измерения (используется в формуле для адаптивных свойств):

$maxWidthRemWithout: calc($maxWidthPx / 16);
$minWidthRemWithout: calc($minWidthPx / 16);
// То есть будет, к примеру, не 2.25rem, а 2.25

//--------------------------//

// ============ Брейкпонты в пикселях ========== //

// $deskMiddle: 1399.98px;
// $desk: 1199.98px;
// $tablet: 991.98px;
// $mobile: 767.98px;
// $mobileMiddle: 575.98px;
// $mobileSmall: 479.98px;

// ============ Брейкпонты в ремах ========== //
// Для медиазапросов.
// Эти брейкпойнты - для desktop first. Если делаем верстку mobile first, то брейкпойнты другие - без дробей (992px, 768px и т.д.).

$deskMiddle: calc(1399.98 / 16 * 1rem); // 87.49875rem
$desk: calc(1199.98 / 16 * 1rem); // 74.99875rem
$tablet: calc(991.98 / 16 * 1rem); // 61.99875rem
$mobile: calc(767.98 / 16 * 1rem); // 47.99875rem
$mobileMiddle: calc(575.98 / 16 * 1rem); // 35.99875rem
$mobileSmall: calc(479.98 / 16 * 1rem); // 29.99875rem

// Брейкпойнты для mobile first

$deskMiddleMin: calc(1400 / 16 * 1rem); // 87.5rem
$deskMin: calc(1200 / 16 * 1rem); // 75rem
$tabletMin: calc(992 / 16 * 1rem); // 62rem
$mobileMin: calc(768 / 16 * 1rem); // 48rem
$mobileMiddleMin: calc(576 / 16 * 1rem); // 36rem
$mobileSmallMin: calc(480 / 16 * 1rem); // 30rem

// Брейкпойнты в ремах без ремов (без единиц измерения). Без дробей
// Для адаптивных свойств

$deskMiddleRemWithout: calc(1400 / 16);
$deskRemWithout: calc(1200 / 16);
$tabletRemWithout: calc(992 / 16);
$mobileRemWithout: calc(768 / 16);
$mobileMiddleRemWithout: calc(576 / 16);
$mobileSmallRemWithout: calc(480 / 16);
